name: Deploy to Staging

on:
    push:
        branches: [main]

jobs:
    deploy:
        runs-on: self-hosted

        env:
            host: https://pedbc.pcmc.gov.ph
            NEXT_PUBLIC_DOMAIN: https://pedbc.pcmc.gov.ph
            NEXT_PUBLIC_APP_URL: https://pedbc.pcmc.gov.ph
            NEXT_PUBLIC_SYSTEM_NAME: "PCMC PedBC - MBD Portal"
            INTERNAL_API_URL: http://127.0.0.1:3000
            NEXT_PUBLIC_UPLOAD_FILE_DOMAIN: https://assets.pcmc.gov.ph
            NEXT_PUBLIC_FILE_SERVER_TOKEN: ${{ secrets.NEXT_PUBLIC_FILE_SERVER_TOKEN }}
            DB_HOST: 10.0.0.187
            DB_PORT: 3306
            DB_USER: mroman
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_NAME: PedDbase07152025
            # NODE_ENV: production
            # NEXT_PUBLIC_NODE_ENV: production
            SESSION_PASSWORD: ${{ secrets.SESSION_PASSWORD }}
            NEXTAUTH_URL: https://pedbc.pcmc.gov.ph
            AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
            AUTH_TRUST_HOST: true
            NEXT_PUBLIC_SOCKET_URL: https://pedbc.pcmc.gov.ph
            SMTP_USER: noreply@pcmc.gov.ph
            SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
            AUTH_GITHUB_ID: ${{ secrets.AUTH_GITHUB_ID }}
            AUTH_GITHUB_SECRET: ${{ secrets.AUTH_GITHUB_SECRET }}
            AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
            AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
            NEXT_PUBLIC_NATIONALITY_API_URL: https://restcountries.com/v3.1/all?fields=name,demonyms
            NEXT_PUBLIC_SUPPORT_EMAIL: pcmcpedbcmbd@gmail.com
            NEXT_PUBLIC_SMTP_SUPPORT_EMAIL: pcmcpedbcmbd@gmail.com
            NEXT_PUBLIC_SMTP_SUPPORT_CONTACT: "(02)89219781"
            NEXT_PUBLIC_MBDT_EMAIL: pcmcpedbcmbd@gmail.com
            OLLAMA_API_URL: http://10.0.1.119:11434/api/generate
            OLLAMA_API_MODEL: llama2,
            GEMINI_API_KEY: AIzaSyDwQK94Eb2g_3-GeRC3Fq1fszkbv9m2HEU
            GEMINI_MODEL: gemini-2.5-flash

        steps:
            # 1️⃣ Fetch latest code
            - uses: actions/checkout@v4
            # 2️⃣ Cache dependencies and Next.js build
            - name: Cache node_modules and Next.js build
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      node_modules
                      .next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
                      ${{ runner.os }}-nextjs-

            # 2️⃣ Recreate .env.production on the server
            - name: Generate .env.production
              run: |
                  cat > .env.production << 'EOF'
                  NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
                  NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
                  NEXT_PUBLIC_SYSTEM_NAME=${NEXT_PUBLIC_SYSTEM_NAME}
                  INTERNAL_API_URL=${INTERNAL_API_URL}
                  NEXT_PUBLIC_UPLOAD_FILE_DOMAIN=${NEXT_PUBLIC_UPLOAD_FILE_DOMAIN}
                  NEXT_PUBLIC_FILE_SERVER_TOKEN=${NEXT_PUBLIC_FILE_SERVER_TOKEN}
                  DB_HOST=${DB_HOST}
                  DB_PORT=${DB_PORT}
                  DB_USER=${DB_USER}
                  DB_PASSWORD=${DB_PASSWORD}
                  DB_NAME=${DB_NAME}
                  NODE_ENV=production
                  NEXT_PUBLIC_NODE_ENV=production
                  SESSION_PASSWORD=${SESSION_PASSWORD}
                  NEXTAUTH_URL=${NEXTAUTH_URL}
                  AUTH_SECRET=${AUTH_SECRET}
                  AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
                  NEXT_PUBLIC_SOCKET_URL=${NEXT_PUBLIC_SOCKET_URL}
                  SMTP_USER=${SMTP_USER}
                  SMTP_PASSWORD=${SMTP_PASSWORD}
                  AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
                  AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
                  AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
                  AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
                  NEXT_PUBLIC_NATIONALITY_API_URL=${NEXT_PUBLIC_NATIONALITY_API_URL}
                  NEXT_PUBLIC_SUPPORT_EMAIL=${NEXT_PUBLIC_SUPPORT_EMAIL}
                  NEXT_PUBLIC_SMTP_SUPPORT_EMAIL=${NEXT_PUBLIC_SMTP_SUPPORT_EMAIL}
                  NEXT_PUBLIC_SMTP_SUPPORT_CONTACT=${NEXT_PUBLIC_SMTP_SUPPORT_CONTACT}
                  NEXT_PUBLIC_MBDT_EMAIL=${NEXT_PUBLIC_MBDT_EMAIL}
                  OLLAMA_API_URL=${OLLAMA_API_URL}
                  OLLAMA_API_MODEL=${OLLAMA_API_MODEL}
                  GEMINI_API_KEY=${GEMINI_API_KEY}
                  GEMINI_MODEL=${GEMINI_MODEL}
                  EOF

            # 3️⃣ Install dependencies
            - name: Install dependencies
              run: npm ci

            # 4️⃣ Build project
            - name: Build project
              run: npm run build
              env:
                  NODE_ENV: production

            # 5️⃣ Deploy (sync files to your actual directory)
            - name: Sync to live project
              run: |
                  rsync -av --delete \
                    --exclude='.env.production' \
                    --exclude='node_modules/' \
                    --exclude='.git/' \
                    --exclude='.github/' \
                    --exclude='.next/cache/' \
                    --exclude='*.log' \
                    --exclude='.DS_Store' \
                    --exclude='README.md' \
                    --exclude='.gitignore' \
                    --exclude='.vscode/' \
                    --exclude='*.md' \
                    . /home/mroman/projects/blood-donation-app/
                  cp .env.production /home/mroman/projects/blood-donation-app/.env.production

            # 6️⃣ Restart PM2
            - name: Restart PM2 app
              run: |
                  pm2 restart BLOOD-BANK-PORTAL --update-env || pm2 start npm --name BLOOD-BANK-PORTAL -- run start

            # 7️⃣ Purge Cloudflare cache
            - name: Purge Cloudflare cache
              env:
                  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
              run: |
                  curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
                    -H "Content-Type: application/json" \
                    -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
                    --data '{"purge_everything":true}'
