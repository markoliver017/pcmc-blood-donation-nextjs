sudo nginx -t  # test config
sudo systemctl reload nginx

server {

        listen 80;
        server_name pedbc.pcmc.gov.ph;
        return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name pedbc.pcmc.gov.ph;

        ssl_certificate /etc/ssl/cloudflare/pedbc.pcmc.gov.ph_origin_certificate.pem;
        ssl_certificate_key /etc/ssl/cloudflare/pedbc.pcmc.gov.ph_origin_private_key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM>
location / {

        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
     }

    location /api/uploads {
        proxy_pass http://localhost:5000/api/uploads;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Optional for large files
        client_max_body_size 100M;
    }

location /uploads {
    proxy_pass http://127.0.0.1:5000/uploads;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # CORS
    add_header 'Access-Control-Allow-Origin' 'https://pedbc.pcmc.gov.ph' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
}



location = /health {
        access_log off;
        return 200 'Healthy\n';
        add_header Content-Type text/plain;
        }

        location ~ /\.(?!well-known).* {
                deny all;
        }

        location ~* ^/(\.env|\.git|\.htaccess|\.htpasswd|\.svn|\.swp|\.bak|\.ini|\.log|\.sh|\.sql)$ {
                deny all;
                return 403;
        }


        # Optional: Logging
         access_log /var/log/nginx/pedbc_stg.log;
        error_log /var/log/nginx/pedbc_stg.log;
}